version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend_app
    depends_on:
      - db
      - redis
      - minio
    environment:
      SERVER_ADDRESS: ":8080"
      SERVER_ENV: "prod"
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_USER: "postgres"
      DB_PASS: "yourpassword"
      DB_NAME: "mydatabase"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      S3_ENDPOINT: "http://minio:9000"
      S3_ACCESS_KEY: "minioadmin"
      S3_SECRET_KEY: "minioadmin"
      S3_BUCKET: "mybucket"
      S3_USE_SSL: "false"
    ports:
      - "8080:8080"
    networks:
      - backend_network

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "yourpassword"
      POSTGRES_DB: "mydatabase"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_network

  redis:
    image: redis:7
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backend_network

  minio:
    image: minio/minio
    container_name: minio_storage
    restart: always
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - backend_network

volumes:
  postgres_data:
  minio_data:

networks:
  backend_network:
    driver: bridge